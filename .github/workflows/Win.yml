name: Build and Automatic Release Telegram Bot API

on:
  push:
    branches: [ main ]

jobs:
  build_and_release:
    runs-on: ubuntu-latest

    steps:
      # Checkout the repository.
      - name: Checkout repository
        uses: actions/checkout@v3

      # Install required dependencies.
      - name: Install Dependencies
        run: |
          sudo apt-get update
          sudo apt-get upgrade -y
          sudo apt-get install -y \
            make \
            git \
            zlib1g-dev \
            libssl-dev \
            gperf \
            cmake \
            clang-14 \
            libc++-14-dev \
            libc++abi-14-dev \
            zip

      # Clone the official Telegram Bot API repository.
      - name: Clone Telegram Bot API Repository
        run: git clone --recursive https://github.com/tdlib/telegram-bot-api.git

      # Build the Telegram Bot API binary.
      - name: Build Telegram Bot API
        run: |
          cd telegram-bot-api
          rm -rf build
          mkdir build
          cd build
          # Configure CMake with clang-14 and libc++.
          CXXFLAGS="-stdlib=libc++" CC=/usr/bin/clang-14 CXX=/usr/bin/clang++-14 \
            cmake -DCMAKE_BUILD_TYPE=Release -DCMAKE_INSTALL_PREFIX:PATH=.. ..
          cmake --build . --target install
          cd ..
          echo "Built binary:"
          ls -l bin/telegram-bot-api

      # Prepare release artifacts by copying and zipping the binary.
      - name: Prepare Release Artifacts
        run: |
          # Ensure the build directory exists.
          mkdir -p build
          # Copy the built binary into the build folder.
          cp bin/telegram-bot-api telegram-bot-api/build/telegram-bot-api
          # Zip the binary.
          cd telegram-bot-api/build
          zip telegram-bot-api.zip telegram-bot-api
          cd ../../
          echo "Release artifacts:"
          ls -l telegram-bot-api/build/

      # Automatically create a release (with tag "latest") and attach the artifacts.
      - name: Automatic Release
        uses: marvinpinto/action-automatic-releases@latest
        with:
          repo_token: "${{ secrets.GITHUB_TOKEN }}"
          automatic_release_tag: "latest"
          prerelease: false
          title: "Latest Build"
          files: |
            telegram-bot-api/build/telegram-bot-api
            telegram-bot-api/build/telegram-bot-api.zip
