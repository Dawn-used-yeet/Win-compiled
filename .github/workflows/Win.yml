name: Build and Release Telegram Bot API

on:
  push:
    branches: [ main ]  # or 'master', depending on your default branch
  workflow_dispatch:

jobs:
  version-and-build:
    runs-on: windows-latest
    
    steps:
    - name: Get current date
      id: date
      run: echo "date=$(Get-Date -Format "yyyy.MM.dd")" | Out-File -FilePath $env:GITHUB_OUTPUT -Append
      shell: pwsh
      
    - name: Generate version number
      id: version
      run: echo "version=v${{ steps.date.outputs.date }}.${{ github.run_number }}" | Out-File -FilePath $env:GITHUB_OUTPUT -Append
      shell: pwsh
      
    - uses: actions/checkout@v3
      with:
        repository: 'tdlib/telegram-bot-api'
        submodules: 'recursive'
        
    - name: Setup vcpkg
      run: |
        git clone https://github.com/Microsoft/vcpkg.git
        cd vcpkg
        .\bootstrap-vcpkg.bat
        .\vcpkg.exe install gperf:x64-windows openssl:x64-windows zlib:x64-windows
        
    - name: Configure CMake
      run: |
        Remove-Item build -Force -Recurse -ErrorAction SilentlyContinue
        mkdir build
        cd build
        cmake -A x64 -DCMAKE_INSTALL_PREFIX:PATH=.. -DCMAKE_TOOLCHAIN_FILE:FILEPATH=..\vcpkg\scripts\buildsystems\vcpkg.cmake ..
        
    - name: Build
      run: |
        cd build
        cmake --build . --target install --config Release
        
    - name: Package
      run: |
        mkdir artifacts
        Copy-Item telegram-bot-api\bin\telegram-bot-api.exe artifacts\
        
    - name: Create Tag
      run: |
        git tag ${{ steps.version.outputs.version }}
        git push origin ${{ steps.version.outputs.version }}
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        
    - name: Create Release
      uses: softprops/action-gh-release@v1
      with:
        tag_name: ${{ steps.version.outputs.version }}
        files: |
          artifacts/telegram-bot-api.exe
        draft: false
        prerelease: false
        generate_release_notes: true
        name: Release ${{ steps.version.outputs.version }}
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
