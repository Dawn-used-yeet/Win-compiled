name: Build and Automatic Release Telegram Bot API

on:
  push:
    branches: [ main ]

jobs:
  build_and_release:
    runs-on: ubuntu-latest

    steps:
      # Check out the repository.
      - name: Checkout repository
        uses: actions/checkout@v3

      # Install system dependencies (including zip).
      - name: Install Dependencies
        run: |
          sudo apt-get update
          sudo apt-get upgrade -y
          sudo apt-get install -y \
            make \
            git \
            zlib1g-dev \
            libssl-dev \
            gperf \
            cmake \
            clang-14 \
            libc++-14-dev \
            libc++abi-14-dev \
            zip

      # Clone the official Telegram Bot API repository.
      - name: Clone Telegram Bot API Repository
        run: git clone --recursive https://github.com/tdlib/telegram-bot-api.git

      # Build the Telegram Bot API binary.
      - name: Build Telegram Bot API
        run: |
          cd telegram-bot-api
          rm -rf build
          mkdir build
          cd build
          # Configure the build to use clang-14 with libc++.
          CXXFLAGS="-stdlib=libc++" CC=/usr/bin/clang-14 CXX=/usr/bin/clang++-14 \
            cmake -DCMAKE_BUILD_TYPE=Release -DCMAKE_INSTALL_PREFIX:PATH=.. ..
          cmake --build . --target install
          cd ..
          echo "Built binary:"
          ls -l bin/telegram-bot-api

      # Prepare the release artifacts by copying and zipping the built binary.
      - name: Prepare Release Artifacts
        run: |
          # Create a dedicated release folder.
          mkdir -p release
          # Copy the built binary from its correct location.
          cp telegram-bot-api/bin/telegram-bot-api release/telegram-bot-api
          # Create a zip archive of the binary.
          cd release
          zip telegram-bot-api.zip telegram-bot-api
          cd ..
          echo "Release artifacts:"
          ls -l release/

      # Create (or update) the automatic release with the artifacts.
      # - name: Automatic Release
      #   uses: marvinpinto/action-automatic-releases@latest
      #   with:
      #     repo_token: "${{ secrets.GITHUB_TOKEN }}"
      #     automatic_release_tag: "latest"
      #     prerelease: false
      #     title: "Latest Build"
      #     files: |
      #       release/telegram-bot-api
      #       release/telegram-bot-api.zip
      - name: Release
        uses: softprops/action-gh-release@v2
        with:
          tag_name: 'latest'
          files: |
            release/telegram-bot-api
            release/telegram-bot-api.zip
